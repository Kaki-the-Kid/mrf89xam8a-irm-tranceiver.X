

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Oct 18 22:56:09 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 05/05/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F26K22 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	idataCOMRAM
    72  001202                     __pidataCOMRAM:
    73                           	callstack 0
    74                           
    75                           ;initializer for __clockData
    76  001202  00                 	db	0
    77  001203  01                 	db	1
    78  001204  02                 	db	2
    79  001205  03                 	db	3
    80  001206  04                 	db	4
    81  001207  05                 	db	5
    82  001208  06                 	db	6
    83  001209  07                 	db	7
    84  00120A  08                 	db	8
    85  00120B  09                 	db	9
    86  00120C  0A                 	db	10
    87  00120D  0B                 	db	11
    88  00120E  0C                 	db	12
    89  00120F  0E                 	db	14
    90  001210  0F                 	db	15
    91                           
    92                           ;initializer for __clockDataString
    93  001211  68                 	db	104
    94  001212  68                 	db	104
    95  001213  3A                 	db	58
    96  001214  6D                 	db	109
    97  001215  6D                 	db	109
    98  001216  3A                 	db	58
    99  001217  73                 	db	115
   100  001218  73                 	db	115
   101  001219  20                 	db	32
   102  00121A  2D                 	db	45
   103  00121B  20                 	db	32
   104  00121C  00                 	db	0
   105                           
   106                           ;initializer for _PASSWORD
   107  00121D  0C                 	db	low (STR_1+11)
   108  00121E  10                 	db	high (STR_1+11)
   109                           
   110                           ;initializer for _SSID
   111  00121F  01                 	db	low STR_1
   112  001220  10                 	db	high STR_1
   113  0000                     _ANSELA	set	3896
   114  0000                     _ANSELB	set	3897
   115  0000                     _ANSELC	set	3898
   116  0000                     _PIR1bits	set	3998
   117  0000                     _RCONbits	set	4048
   118  0000                     _RCREG1	set	4014
   119  0000                     _RCSTA1bits	set	4011
   120  0000                     _TXREG1	set	4013
   121  0000                     _TXSTA1bits	set	4012
   122  0000                     _SPBRGH1	set	4016
   123  0000                     _SPBRG1	set	4015
   124  0000                     _TXSTA1	set	4012
   125  0000                     _RCSTA1	set	4011
   126  0000                     _BAUDCON1	set	4024
   127  0000                     _PIE1bits	set	3997
   128  0000                     _INTCONbits	set	4082
   129  0000                     _INTCON2bits	set	4081
   130  0000                     _WPUB	set	3937
   131  0000                     _TRISC	set	3988
   132  0000                     _TRISB	set	3987
   133  0000                     _TRISA	set	3986
   134  0000                     _LATC	set	3979
   135  0000                     _LATB	set	3978
   136  0000                     _LATA	set	3977
   137  0000                     _OSCTUNE	set	3995
   138  0000                     _OSCCON2	set	4050
   139  0000                     _OSCCON	set	4051
   140  0000                     _PLLRDY	set	32407
   141                           
   142                           	psect	smallconst
   143  001000                     __psmallconst:
   144                           	callstack 0
   145  001000  00                 	db	0
   146  001001                     STR_1:
   147  001001  53                 	db	83	;'S'
   148  001002  53                 	db	83	;'S'
   149  001003  49                 	db	73	;'I'
   150  001004  44                 	db	68	;'D'
   151  001005  2D                 	db	45
   152  001006  4A                 	db	74	;'J'
   153  001007  52                 	db	82	;'R'
   154  001008  7A                 	db	122	;'z'
   155  001009  63                 	db	99	;'c'
   156  00100A  4D                 	db	77	;'M'
   157  00100B  34                 	db	52	;'4'
   158  00100C  00                 	db	0
   159  00100D  00                 	db	0	; dummy byte at the end
   160  0000                     
   161                           ; #config settings
   162                           
   163                           	psect	cinit
   164  001178                     __pcinit:
   165                           	callstack 0
   166  001178                     start_initialization:
   167                           	callstack 0
   168  001178                     __initialization:
   169                           	callstack 0
   170                           
   171                           ; Initialize objects allocated to COMRAM (31 bytes)
   172                           ; load TBLPTR registers with __pidataCOMRAM
   173  001178  0E02               	movlw	low __pidataCOMRAM
   174  00117A  6EF6               	movwf	tblptrl,c
   175  00117C  0E12               	movlw	high __pidataCOMRAM
   176  00117E  6EF7               	movwf	tblptrh,c
   177  001180  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   178  001182  6EF8               	movwf	tblptru,c
   179  001184  EE00  F02A         	lfsr	0,__pdataCOMRAM
   180  001188  EE10 F01F          	lfsr	1,31
   181  00118C                     copy_data0:
   182  00118C  0009               	tblrd		*+
   183  00118E  CFF5 FFEE          	movff	tablat,postinc0
   184  001192  50E5               	movf	postdec1,w,c
   185  001194  50E1               	movf	fsr1l,w,c
   186  001196  E1FA               	bnz	copy_data0
   187                           
   188                           ; Clear objects allocated to COMRAM (41 bytes)
   189  001198  EE00  F001         	lfsr	0,__pbssCOMRAM
   190  00119C  0E29               	movlw	41
   191  00119E                     clear_0:
   192  00119E  6AEE               	clrf	postinc0,c
   193  0011A0  06E8               	decf	wreg,f,c
   194  0011A2  E1FD               	bnz	clear_0
   195  0011A4                     end_of_initialization:
   196                           	callstack 0
   197  0011A4                     __end_of__initialization:
   198                           	callstack 0
   199  0011A4  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   200  0011A6  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   201  0011A8  0100               	movlb	0
   202  0011AA  EF28  F009         	goto	_main	;jump to C main() function
   203                           
   204                           	psect	bssCOMRAM
   205  000001                     __pbssCOMRAM:
   206                           	callstack 0
   207  000001                     _eusart1RxStatusBuffer:
   208                           	callstack 0
   209  000001                     	ds	8
   210  000009                     _eusart1RxBuffer:
   211                           	callstack 0
   212  000009                     	ds	8
   213  000011                     _eusart1TxBuffer:
   214                           	callstack 0
   215  000011                     	ds	8
   216  000019                     _EUSART1_ErrorHandler:
   217                           	callstack 0
   218  000019                     	ds	2
   219  00001B                     _EUSART1_OverrunErrorHandler:
   220                           	callstack 0
   221  00001B                     	ds	2
   222  00001D                     _EUSART1_FramingErrorHandler:
   223                           	callstack 0
   224  00001D                     	ds	2
   225  00001F                     _EUSART1_RxDefaultInterruptHandler:
   226                           	callstack 0
   227  00001F                     	ds	2
   228  000021                     _EUSART1_TxDefaultInterruptHandler:
   229                           	callstack 0
   230  000021                     	ds	2
   231  000023                     _eusart1RxLastError:
   232                           	callstack 0
   233  000023                     	ds	1
   234  000024                     _eusart1RxCount:
   235                           	callstack 0
   236  000024                     	ds	1
   237  000025                     _eusart1RxTail:
   238                           	callstack 0
   239  000025                     	ds	1
   240  000026                     _eusart1RxHead:
   241                           	callstack 0
   242  000026                     	ds	1
   243  000027                     _eusart1TxBufferRemaining:
   244                           	callstack 0
   245  000027                     	ds	1
   246  000028                     _eusart1TxTail:
   247                           	callstack 0
   248  000028                     	ds	1
   249  000029                     _eusart1TxHead:
   250                           	callstack 0
   251  000029                     	ds	1
   252                           
   253                           	psect	dataCOMRAM
   254  00002A                     __pdataCOMRAM:
   255                           	callstack 0
   256  00002A                     __clockData:
   257                           	callstack 0
   258  00002A                     	ds	15
   259  000039                     __clockDataString:
   260                           	callstack 0
   261  000039                     	ds	12
   262  000045                     _PASSWORD:
   263                           	callstack 0
   264  000045                     	ds	2
   265  000047                     _SSID:
   266                           	callstack 0
   267  000047                     	ds	2
   268                           
   269                           	psect	cstackCOMRAM
   270  000049                     __pcstackCOMRAM:
   271                           	callstack 0
   272  000049                     ??_INTERRUPT_InterruptManager:
   273                           
   274                           ; 1 bytes @ 0x0
   275  000049                     	ds	4
   276  00004D                     EUSART1_SetFramingErrorHandler@interruptHandler:
   277                           	callstack 0
   278  00004D                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   279                           	callstack 0
   280  00004D                     EUSART1_SetErrorHandler@interruptHandler:
   281                           	callstack 0
   282  00004D                     EUSART1_SetTxInterruptHandler@interruptHandler:
   283                           	callstack 0
   284  00004D                     EUSART1_SetRxInterruptHandler@interruptHandler:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x4
   288  00004D                     	ds	2
   289  00004F                     
   290                           ; 1 bytes @ 0x6
   291 ;;
   292 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   293 ;;
   294 ;; *************** function _main *****************
   295 ;; Defined at:
   296 ;;		line 49 in file "main.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;		None
   299 ;; Auto vars:     Size  Location     Type
   300 ;;		None
   301 ;; Return value:  Size  Location     Type
   302 ;;                  1    wreg      void 
   303 ;; Registers used:
   304 ;;		wreg, status,2, status,0, cstack
   305 ;; Tracked objects:
   306 ;;		On entry : 0/0
   307 ;;		On exit  : 0/0
   308 ;;		Unchanged: 0/0
   309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   314 ;;Total ram usage:        0 bytes
   315 ;; Hardware stack levels required when called:    7
   316 ;; This function calls:
   317 ;;		_SYSTEM_Initialize
   318 ;; This function is called by:
   319 ;;		Startup code after reset
   320 ;; This function uses a non-reentrant model
   321 ;;
   322                           
   323                           	psect	text0
   324  001250                     __ptext0:
   325                           	callstack 0
   326  001250                     _main:
   327                           	callstack 24
   328  001250                     
   329                           ;main.c: 52:     SYSTEM_Initialize();
   330  001250  EC1F  F009         	call	_SYSTEM_Initialize	;wreg free
   331  001254                     l62:
   332  001254  EF2A  F009         	goto	l62
   333  001258  EF56  F000         	goto	start
   334  00125C                     __end_of_main:
   335                           	callstack 0
   336                           
   337 ;; *************** function _SYSTEM_Initialize *****************
   338 ;; Defined at:
   339 ;;		line 50 in file "mcc_generated_files/mcc.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;		None
   344 ;; Return value:  Size  Location     Type
   345 ;;                  1    wreg      void 
   346 ;; Registers used:
   347 ;;		wreg, status,2, status,0, cstack
   348 ;; Tracked objects:
   349 ;;		On entry : 0/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   357 ;;Total ram usage:        0 bytes
   358 ;; Hardware stack levels used:    1
   359 ;; Hardware stack levels required when called:    6
   360 ;; This function calls:
   361 ;;		_EUSART1_Initialize
   362 ;;		_INTERRUPT_Initialize
   363 ;;		_OSCILLATOR_Initialize
   364 ;;		_PIN_MANAGER_Initialize
   365 ;; This function is called by:
   366 ;;		_main
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370                           	psect	text1
   371  00123E                     __ptext1:
   372                           	callstack 0
   373  00123E                     _SYSTEM_Initialize:
   374                           	callstack 24
   375  00123E                     
   376                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
   377  00123E  EC4D  F009         	call	_INTERRUPT_Initialize	;wreg free
   378  001242                     
   379                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
   380  001242  ECD7  F008         	call	_PIN_MANAGER_Initialize	;wreg free
   381  001246                     
   382                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
   383  001246  EC11  F009         	call	_OSCILLATOR_Initialize	;wreg free
   384  00124A                     
   385                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
   386  00124A  EC62  F008         	call	_EUSART1_Initialize	;wreg free
   387  00124E  0012               	return		;funcret
   388  001250                     __end_of_SYSTEM_Initialize:
   389                           	callstack 0
   390                           
   391 ;; *************** function _PIN_MANAGER_Initialize *****************
   392 ;; Defined at:
   393 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   394 ;; Parameters:    Size  Location     Type
   395 ;;		None
   396 ;; Auto vars:     Size  Location     Type
   397 ;;		None
   398 ;; Return value:  Size  Location     Type
   399 ;;                  1    wreg      void 
   400 ;; Registers used:
   401 ;;		wreg, status,2
   402 ;; Tracked objects:
   403 ;;		On entry : 0/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   411 ;;Total ram usage:        0 bytes
   412 ;; Hardware stack levels used:    1
   413 ;; Hardware stack levels required when called:    4
   414 ;; This function calls:
   415 ;;		Nothing
   416 ;; This function is called by:
   417 ;;		_SYSTEM_Initialize
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           	psect	text2
   422  0011AE                     __ptext2:
   423                           	callstack 0
   424  0011AE                     _PIN_MANAGER_Initialize:
   425                           	callstack 25
   426  0011AE                     
   427                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
   428  0011AE  0E00               	movlw	0
   429  0011B0  6E89               	movwf	137,c	;volatile
   430                           
   431                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
   432  0011B2  0E00               	movlw	0
   433  0011B4  6E8A               	movwf	138,c	;volatile
   434                           
   435                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
   436  0011B6  0E00               	movlw	0
   437  0011B8  6E8B               	movwf	139,c	;volatile
   438  0011BA                     
   439                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
   440  0011BA  6892               	setf	146,c	;volatile
   441  0011BC                     
   442                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
   443  0011BC  6893               	setf	147,c	;volatile
   444                           
   445                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
   446  0011BE  0EBF               	movlw	191
   447  0011C0  6E94               	movwf	148,c	;volatile
   448                           
   449                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
   450  0011C2  0E3C               	movlw	60
   451  0011C4  010F               	movlb	15	; () banked
   452  0011C6  6F3A               	movwf	58,b	;volatile
   453                           
   454                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
   455  0011C8  0E3F               	movlw	63
   456  0011CA  6F39               	movwf	57,b	;volatile
   457                           
   458                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
   459  0011CC  0E2F               	movlw	47
   460  0011CE  6F38               	movwf	56,b	;volatile
   461                           
   462                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
   463  0011D0  0E00               	movlw	0
   464  0011D2  6E61               	movwf	97,c	;volatile
   465  0011D4                     
   466                           ; BSR set to: 15
   467                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
   468  0011D4  8EF1               	bsf	241,7,c	;volatile
   469  0011D6                     
   470                           ; BSR set to: 15
   471  0011D6  0012               	return		;funcret
   472  0011D8                     __end_of_PIN_MANAGER_Initialize:
   473                           	callstack 0
   474                           
   475 ;; *************** function _OSCILLATOR_Initialize *****************
   476 ;; Defined at:
   477 ;;		line 59 in file "mcc_generated_files/mcc.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, status,2
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   495 ;;Total ram usage:        0 bytes
   496 ;; Hardware stack levels used:    1
   497 ;; Hardware stack levels required when called:    4
   498 ;; This function calls:
   499 ;;		Nothing
   500 ;; This function is called by:
   501 ;;		_SYSTEM_Initialize
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           	psect	text3
   506  001222                     __ptext3:
   507                           	callstack 0
   508  001222                     _OSCILLATOR_Initialize:
   509                           	callstack 25
   510  001222                     
   511                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
   512  001222  0E70               	movlw	112
   513  001224  6ED3               	movwf	211,c	;volatile
   514                           
   515                           ;mcc_generated_files/mcc.c: 64:     OSCCON2 = 0x04;
   516  001226  0E04               	movlw	4
   517  001228  6ED2               	movwf	210,c	;volatile
   518                           
   519                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x40;
   520  00122A  0E40               	movlw	64
   521  00122C  6E9B               	movwf	155,c	;volatile
   522  00122E                     l22:
   523                           
   524                           ;mcc_generated_files/mcc.c: 68:     while(PLLRDY == 0)
   525  00122E  AED2               	btfss	4050,7,c	;volatile
   526  001230  EF1C  F009         	goto	u21
   527  001234  EF1E  F009         	goto	u20
   528  001238                     u21:
   529  001238  EF17  F009         	goto	l22
   530  00123C                     u20:
   531  00123C  0012               	return		;funcret
   532  00123E                     __end_of_OSCILLATOR_Initialize:
   533                           	callstack 0
   534                           
   535 ;; *************** function _INTERRUPT_Initialize *****************
   536 ;; Defined at:
   537 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   538 ;; Parameters:    Size  Location     Type
   539 ;;		None
   540 ;; Auto vars:     Size  Location     Type
   541 ;;		None
   542 ;; Return value:  Size  Location     Type
   543 ;;                  1    wreg      void 
   544 ;; Registers used:
   545 ;;		None
   546 ;; Tracked objects:
   547 ;;		On entry : 0/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;Total ram usage:        0 bytes
   556 ;; Hardware stack levels used:    1
   557 ;; Hardware stack levels required when called:    4
   558 ;; This function calls:
   559 ;;		Nothing
   560 ;; This function is called by:
   561 ;;		_SYSTEM_Initialize
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565                           	psect	text4
   566  00129A                     __ptext4:
   567                           	callstack 0
   568  00129A                     _INTERRUPT_Initialize:
   569                           	callstack 25
   570  00129A                     
   571                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
   572  00129A  9ED0               	bcf	208,7,c	;volatile
   573  00129C  0012               	return		;funcret
   574  00129E                     __end_of_INTERRUPT_Initialize:
   575                           	callstack 0
   576                           
   577 ;; *************** function _EUSART1_Initialize *****************
   578 ;; Defined at:
   579 ;;		line 88 in file "mcc_generated_files/eusart1.c"
   580 ;; Parameters:    Size  Location     Type
   581 ;;		None
   582 ;; Auto vars:     Size  Location     Type
   583 ;;		None
   584 ;; Return value:  Size  Location     Type
   585 ;;                  1    wreg      void 
   586 ;; Registers used:
   587 ;;		wreg, status,2, status,0, cstack
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   597 ;;Total ram usage:        0 bytes
   598 ;; Hardware stack levels used:    1
   599 ;; Hardware stack levels required when called:    5
   600 ;; This function calls:
   601 ;;		_EUSART1_SetErrorHandler
   602 ;;		_EUSART1_SetFramingErrorHandler
   603 ;;		_EUSART1_SetOverrunErrorHandler
   604 ;;		_EUSART1_SetRxInterruptHandler
   605 ;;		_EUSART1_SetTxInterruptHandler
   606 ;; This function is called by:
   607 ;;		_SYSTEM_Initialize
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           	psect	text5
   612  0010C4                     __ptext5:
   613                           	callstack 0
   614  0010C4                     _EUSART1_Initialize:
   615                           	callstack 24
   616  0010C4                     
   617                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
   618  0010C4  9A9D               	bcf	157,5,c	;volatile
   619  0010C6                     
   620                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
   621  0010C6  0E0E               	movlw	low _EUSART1_Receive_ISR
   622  0010C8  6E4D               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
   623  0010CA  0E10               	movlw	high _EUSART1_Receive_ISR
   624  0010CC  6E4E               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
   625  0010CE  EC33  F009         	call	_EUSART1_SetRxInterruptHandler	;wreg free
   626  0010D2                     
   627                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
   628  0010D2  989D               	bcf	157,4,c	;volatile
   629                           
   630                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
   631  0010D4  0E38               	movlw	low _EUSART1_Transmit_ISR
   632  0010D6  6E4D               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
   633  0010D8  0E11               	movlw	high _EUSART1_Transmit_ISR
   634  0010DA  6E4E               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
   635  0010DC  EC2E  F009         	call	_EUSART1_SetTxInterruptHandler	;wreg free
   636  0010E0                     
   637                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
   638  0010E0  0E08               	movlw	8
   639  0010E2  6EB8               	movwf	184,c	;volatile
   640  0010E4                     
   641                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
   642  0010E4  0E90               	movlw	144
   643  0010E6  6EAB               	movwf	171,c	;volatile
   644  0010E8                     
   645                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
   646  0010E8  0E24               	movlw	36
   647  0010EA  6EAC               	movwf	172,c	;volatile
   648  0010EC                     
   649                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x15;
   650  0010EC  0E15               	movlw	21
   651  0010EE  6EAF               	movwf	175,c	;volatile
   652  0010F0                     
   653                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x01;
   654  0010F0  0E01               	movlw	1
   655  0010F2  6EB0               	movwf	176,c	;volatile
   656  0010F4                     
   657                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
   658  0010F4  0E9E               	movlw	low _EUSART1_DefaultFramingErrorHandler
   659  0010F6  6E4D               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
   660  0010F8  0E12               	movlw	high _EUSART1_DefaultFramingErrorHandler
   661  0010FA  6E4E               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
   662  0010FC  EC3D  F009         	call	_EUSART1_SetFramingErrorHandler	;wreg free
   663  001100                     
   664                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
   665  001100  0E8E               	movlw	low _EUSART1_DefaultOverrunErrorHandler
   666  001102  6E4D               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
   667  001104  0E12               	movlw	high _EUSART1_DefaultOverrunErrorHandler
   668  001106  6E4E               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
   669  001108  EC38  F009         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
   670  00110C                     
   671                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
   672  00110C  0E94               	movlw	low _EUSART1_DefaultErrorHandler
   673  00110E  6E4D               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
   674  001110  0E12               	movlw	high _EUSART1_DefaultErrorHandler
   675  001112  6E4E               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
   676  001114  EC42  F009         	call	_EUSART1_SetErrorHandler	;wreg free
   677                           
   678                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
   679  001118  0E00               	movlw	0
   680  00111A  6E23               	movwf	_eusart1RxLastError^0,c	;volatile
   681                           
   682                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
   683  00111C  0E00               	movlw	0
   684  00111E  6E29               	movwf	_eusart1TxHead^0,c	;volatile
   685                           
   686                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
   687  001120  0E00               	movlw	0
   688  001122  6E28               	movwf	_eusart1TxTail^0,c	;volatile
   689                           
   690                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
   691  001124  0E08               	movlw	8
   692  001126  6E27               	movwf	_eusart1TxBufferRemaining^0,c	;volatile
   693                           
   694                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
   695  001128  0E00               	movlw	0
   696  00112A  6E26               	movwf	_eusart1RxHead^0,c	;volatile
   697                           
   698                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
   699  00112C  0E00               	movlw	0
   700  00112E  6E25               	movwf	_eusart1RxTail^0,c	;volatile
   701                           
   702                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
   703  001130  0E00               	movlw	0
   704  001132  6E24               	movwf	_eusart1RxCount^0,c	;volatile
   705  001134                     
   706                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
   707  001134  8A9D               	bsf	157,5,c	;volatile
   708  001136  0012               	return		;funcret
   709  001138                     __end_of_EUSART1_Initialize:
   710                           	callstack 0
   711                           
   712 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
   713 ;; Defined at:
   714 ;;		line 285 in file "mcc_generated_files/eusart1.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
   717 ;;		 -> EUSART1_Transmit_ISR(1), 
   718 ;; Auto vars:     Size  Location     Type
   719 ;;		None
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, status,2, status,0
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   732 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   733 ;;Total ram usage:        2 bytes
   734 ;; Hardware stack levels used:    1
   735 ;; Hardware stack levels required when called:    4
   736 ;; This function calls:
   737 ;;		Nothing
   738 ;; This function is called by:
   739 ;;		_EUSART1_Initialize
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text6
   744  00125C                     __ptext6:
   745                           	callstack 0
   746  00125C                     _EUSART1_SetTxInterruptHandler:
   747                           	callstack 24
   748  00125C                     
   749                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
   750  00125C  C04D  F021         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
   751  001260  C04E  F022         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
   752  001264  0012               	return		;funcret
   753  001266                     __end_of_EUSART1_SetTxInterruptHandler:
   754                           	callstack 0
   755                           
   756 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
   757 ;; Defined at:
   758 ;;		line 289 in file "mcc_generated_files/eusart1.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
   761 ;;		 -> EUSART1_Receive_ISR(1), 
   762 ;; Auto vars:     Size  Location     Type
   763 ;;		None
   764 ;; Return value:  Size  Location     Type
   765 ;;                  1    wreg      void 
   766 ;; Registers used:
   767 ;;		wreg, status,2, status,0
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   773 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   776 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   777 ;;Total ram usage:        2 bytes
   778 ;; Hardware stack levels used:    1
   779 ;; Hardware stack levels required when called:    4
   780 ;; This function calls:
   781 ;;		Nothing
   782 ;; This function is called by:
   783 ;;		_EUSART1_Initialize
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           	psect	text7
   788  001266                     __ptext7:
   789                           	callstack 0
   790  001266                     _EUSART1_SetRxInterruptHandler:
   791                           	callstack 24
   792  001266                     
   793                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
   794  001266  C04D  F01F         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
   795  00126A  C04E  F020         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
   796  00126E  0012               	return		;funcret
   797  001270                     __end_of_EUSART1_SetRxInterruptHandler:
   798                           	callstack 0
   799                           
   800 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
   801 ;; Defined at:
   802 ;;		line 277 in file "mcc_generated_files/eusart1.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
   805 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
   806 ;; Auto vars:     Size  Location     Type
   807 ;;		None
   808 ;; Return value:  Size  Location     Type
   809 ;;                  1    wreg      void 
   810 ;; Registers used:
   811 ;;		wreg, status,2, status,0
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   817 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   820 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   821 ;;Total ram usage:        2 bytes
   822 ;; Hardware stack levels used:    1
   823 ;; Hardware stack levels required when called:    4
   824 ;; This function calls:
   825 ;;		Nothing
   826 ;; This function is called by:
   827 ;;		_EUSART1_Initialize
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           	psect	text8
   832  001270                     __ptext8:
   833                           	callstack 0
   834  001270                     _EUSART1_SetOverrunErrorHandler:
   835                           	callstack 24
   836  001270                     
   837                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
   838  001270  C04D  F01B         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
   839  001274  C04E  F01C         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
   840  001278  0012               	return		;funcret
   841  00127A                     __end_of_EUSART1_SetOverrunErrorHandler:
   842                           	callstack 0
   843                           
   844 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
   845 ;; Defined at:
   846 ;;		line 273 in file "mcc_generated_files/eusart1.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
   849 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
   850 ;; Auto vars:     Size  Location     Type
   851 ;;		None
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, status,2, status,0
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   864 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   865 ;;Total ram usage:        2 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; Hardware stack levels required when called:    4
   868 ;; This function calls:
   869 ;;		Nothing
   870 ;; This function is called by:
   871 ;;		_EUSART1_Initialize
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           	psect	text9
   876  00127A                     __ptext9:
   877                           	callstack 0
   878  00127A                     _EUSART1_SetFramingErrorHandler:
   879                           	callstack 24
   880  00127A                     
   881                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
   882  00127A  C04D  F01D         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
   883  00127E  C04E  F01E         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
   884  001282  0012               	return		;funcret
   885  001284                     __end_of_EUSART1_SetFramingErrorHandler:
   886                           	callstack 0
   887                           
   888 ;; *************** function _EUSART1_SetErrorHandler *****************
   889 ;; Defined at:
   890 ;;		line 281 in file "mcc_generated_files/eusart1.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
   893 ;;		 -> EUSART1_DefaultErrorHandler(1), 
   894 ;; Auto vars:     Size  Location     Type
   895 ;;		None
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg, status,2, status,0
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;Total ram usage:        2 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; Hardware stack levels required when called:    4
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_EUSART1_Initialize
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text10
   920  001284                     __ptext10:
   921                           	callstack 0
   922  001284                     _EUSART1_SetErrorHandler:
   923                           	callstack 24
   924  001284                     
   925                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
   926  001284  C04D  F019         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
   927  001288  C04E  F01A         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
   928  00128C  0012               	return		;funcret
   929  00128E                     __end_of_EUSART1_SetErrorHandler:
   930                           	callstack 0
   931                           
   932 ;; *************** function _INTERRUPT_InterruptManager *****************
   933 ;; Defined at:
   934 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;		None
   937 ;; Auto vars:     Size  Location     Type
   938 ;;		None
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   950 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   951 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   952 ;;Total ram usage:        4 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; Hardware stack levels required when called:    3
   955 ;; This function calls:
   956 ;;		Absolute function
   957 ;;		_EUSART1_Receive_ISR
   958 ;;		_EUSART1_Transmit_ISR
   959 ;; This function is called by:
   960 ;;		Interrupt level 2
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	intcode
   965  000008                     __pintcode:
   966                           	callstack 0
   967  000008                     _INTERRUPT_InterruptManager:
   968                           	callstack 24
   969                           
   970                           ;incstack = 0
   971  000008  824F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   972  00000A  CFFA F049          	movff	pclath,??_INTERRUPT_InterruptManager
   973  00000E  CFFB F04A          	movff	pclatu,??_INTERRUPT_InterruptManager+1
   974  000012  CFD9 F04B          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
   975  000016  CFDA F04C          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
   976  00001A                     
   977                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
   978  00001A  ACF2               	btfss	242,6,c	;volatile
   979  00001C  EF12  F000         	goto	i2u16_41
   980  000020  EF14  F000         	goto	i2u16_40
   981  000024                     i2u16_41:
   982  000024  EF4C  F000         	goto	i2l360
   983  000028                     i2u16_40:
   984  000028                     
   985                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
   986  000028  A89D               	btfss	157,4,c	;volatile
   987  00002A  EF19  F000         	goto	i2u17_41
   988  00002E  EF1B  F000         	goto	i2u17_40
   989  000032                     i2u17_41:
   990  000032  EF30  F000         	goto	i2l355
   991  000036                     i2u17_40:
   992  000036  A89E               	btfss	158,4,c	;volatile
   993  000038  EF20  F000         	goto	i2u18_41
   994  00003C  EF22  F000         	goto	i2u18_40
   995  000040                     i2u18_41:
   996  000040  EF30  F000         	goto	i2l355
   997  000044                     i2u18_40:
   998  000044                     
   999                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART1_TxDefaultInterruptHandler();
  1000  000044  D802               	call	i2u19_48
  1001  000046  EF2E  F000         	goto	i2u19_49
  1002  00004A                     i2u19_48:
  1003  00004A  0005               	push	
  1004  00004C  6EFA               	movwf	pclath,c
  1005  00004E  5021               	movf	_EUSART1_TxDefaultInterruptHandler^0,w,c
  1006  000050  6EFD               	movwf	tosl,c
  1007  000052  5022               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^0,w,c
  1008  000054  6EFE               	movwf	tosh,c
  1009  000056  6AFF               	clrf	tosu,c
  1010  000058  50FA               	movf	pclath,w,c
  1011  00005A  0012               	return		;indir
  1012  00005C                     i2u19_49:
  1013                           
  1014                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  1015  00005C  EF4C  F000         	goto	i2l360
  1016  000060                     i2l355:
  1017  000060  AA9D               	btfss	157,5,c	;volatile
  1018  000062  EF35  F000         	goto	i2u20_41
  1019  000066  EF37  F000         	goto	i2u20_40
  1020  00006A                     i2u20_41:
  1021  00006A  EF4C  F000         	goto	i2l356
  1022  00006E                     i2u20_40:
  1023  00006E  AA9E               	btfss	158,5,c	;volatile
  1024  000070  EF3C  F000         	goto	i2u21_41
  1025  000074  EF3E  F000         	goto	i2u21_40
  1026  000078                     i2u21_41:
  1027  000078  EF4C  F000         	goto	i2l356
  1028  00007C                     i2u21_40:
  1029  00007C                     
  1030                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_RxDefaultInterruptHandler();
  1031  00007C  D802               	call	i2u22_48
  1032  00007E  EF4A  F000         	goto	i2u22_49
  1033  000082                     i2u22_48:
  1034  000082  0005               	push	
  1035  000084  6EFA               	movwf	pclath,c
  1036  000086  501F               	movf	_EUSART1_RxDefaultInterruptHandler^0,w,c
  1037  000088  6EFD               	movwf	tosl,c
  1038  00008A  5020               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^0,w,c
  1039  00008C  6EFE               	movwf	tosh,c
  1040  00008E  6AFF               	clrf	tosu,c
  1041  000090  50FA               	movf	pclath,w,c
  1042  000092  0012               	return		;indir
  1043  000094                     i2u22_49:
  1044                           
  1045                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  1046  000094  EF4C  F000         	goto	i2l360
  1047  000098                     i2l356:
  1048  000098                     i2l360:
  1049  000098  C04C  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  1050  00009C  C04B  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  1051  0000A0  C04A  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1052  0000A4  C049  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1053  0000A8  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1054  0000AA  0011               	retfie		f
  1055  0000AC                     __end_of_INTERRUPT_InterruptManager:
  1056                           	callstack 0
  1057                           
  1058 ;; *************** function _EUSART1_Transmit_ISR *****************
  1059 ;; Defined at:
  1060 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;		None
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;		None
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      void 
  1067 ;; Registers used:
  1068 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1078 ;;Total ram usage:        0 bytes
  1079 ;; Hardware stack levels used:    1
  1080 ;; This function calls:
  1081 ;;		Nothing
  1082 ;; This function is called by:
  1083 ;;		_EUSART1_Initialize
  1084 ;;		_INTERRUPT_InterruptManager
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           	psect	text12
  1089  001138                     __ptext12:
  1090                           	callstack 0
  1091  001138                     _EUSART1_Transmit_ISR:
  1092                           	callstack 26
  1093  001138                     
  1094                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  1095  001138  0E08               	movlw	8
  1096  00113A  6027               	cpfslt	_eusart1TxBufferRemaining^0,c	;volatile
  1097  00113C  EFA2  F008         	goto	i2u8_41
  1098  001140  EFA4  F008         	goto	i2u8_40
  1099  001144                     i2u8_41:
  1100  001144  EFBA  F008         	goto	i2l296
  1101  001148                     i2u8_40:
  1102  001148                     
  1103                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  1104  001148  0E11               	movlw	low _eusart1TxBuffer
  1105  00114A  2428               	addwf	_eusart1TxTail^0,w,c	;volatile
  1106  00114C  6ED9               	movwf	fsr2l,c
  1107  00114E  6ADA               	clrf	fsr2h,c
  1108  001150  0E00               	movlw	high _eusart1TxBuffer
  1109  001152  22DA               	addwfc	fsr2h,f,c
  1110  001154  50DF               	movf	indf2,w,c
  1111  001156  6EAD               	movwf	173,c	;volatile
  1112  001158  2A28               	incf	_eusart1TxTail^0,f,c	;volatile
  1113  00115A                     
  1114                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  1115  00115A  0E07               	movlw	7
  1116  00115C  6428               	cpfsgt	_eusart1TxTail^0,c	;volatile
  1117  00115E  EFB3  F008         	goto	i2u9_41
  1118  001162  EFB5  F008         	goto	i2u9_40
  1119  001166                     i2u9_41:
  1120  001166  EFB7  F008         	goto	i2l1154
  1121  00116A                     i2u9_40:
  1122  00116A                     
  1123                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  1124  00116A  0E00               	movlw	0
  1125  00116C  6E28               	movwf	_eusart1TxTail^0,c	;volatile
  1126  00116E                     i2l1154:
  1127                           
  1128                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  1129  00116E  2A27               	incf	_eusart1TxBufferRemaining^0,f,c	;volatile
  1130                           
  1131                           ;mcc_generated_files/eusart1.c: 218:     }
  1132  001170  EFBB  F008         	goto	i2l299
  1133  001174                     i2l296:
  1134                           
  1135                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
  1136  001174  989D               	bcf	157,4,c	;volatile
  1137  001176                     i2l299:
  1138  001176  0012               	return		;funcret
  1139  001178                     __end_of_EUSART1_Transmit_ISR:
  1140                           	callstack 0
  1141                           
  1142 ;; *************** function _EUSART1_Receive_ISR *****************
  1143 ;; Defined at:
  1144 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;		None
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1162 ;;Total ram usage:        0 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; Hardware stack levels required when called:    2
  1165 ;; This function calls:
  1166 ;;		Absolute function
  1167 ;;		_EUSART1_DefaultErrorHandler
  1168 ;;		_EUSART1_DefaultFramingErrorHandler
  1169 ;;		_EUSART1_DefaultOverrunErrorHandler
  1170 ;;		_EUSART1_RxDataHandler
  1171 ;; This function is called by:
  1172 ;;		_EUSART1_Initialize
  1173 ;;		_INTERRUPT_InterruptManager
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           	psect	text13
  1178  00100E                     __ptext13:
  1179                           	callstack 0
  1180  00100E                     _EUSART1_Receive_ISR:
  1181                           	callstack 24
  1182  00100E                     
  1183                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  1184  00100E  0E01               	movlw	low _eusart1RxStatusBuffer
  1185  001010  2426               	addwf	_eusart1RxHead^0,w,c	;volatile
  1186  001012  6ED9               	movwf	fsr2l,c
  1187  001014  6ADA               	clrf	fsr2h,c
  1188  001016  0E00               	movlw	high _eusart1RxStatusBuffer
  1189  001018  22DA               	addwfc	fsr2h,f,c
  1190  00101A  0E00               	movlw	0
  1191  00101C  6EDF               	movwf	indf2,c
  1192  00101E                     
  1193                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
  1194  00101E  A4AB               	btfss	171,2,c	;volatile
  1195  001020  EF14  F008         	goto	i2u10_41
  1196  001024  EF16  F008         	goto	i2u10_40
  1197  001028                     i2u10_41:
  1198  001028  EF29  F008         	goto	i2l1164
  1199  00102C                     i2u10_40:
  1200  00102C                     
  1201                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  1202  00102C  0E01               	movlw	low _eusart1RxStatusBuffer
  1203  00102E  2426               	addwf	_eusart1RxHead^0,w,c	;volatile
  1204  001030  6ED9               	movwf	fsr2l,c
  1205  001032  6ADA               	clrf	fsr2h,c
  1206  001034  0E00               	movlw	high _eusart1RxStatusBuffer
  1207  001036  22DA               	addwfc	fsr2h,f,c
  1208  001038  82DF               	bsf	indf2,1,c
  1209  00103A                     
  1210                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  1211  00103A  D802               	call	i2u11_48
  1212  00103C  EF29  F008         	goto	i2u11_49
  1213  001040                     i2u11_48:
  1214  001040  0005               	push	
  1215  001042  6EFA               	movwf	pclath,c
  1216  001044  501D               	movf	_EUSART1_FramingErrorHandler^0,w,c
  1217  001046  6EFD               	movwf	tosl,c
  1218  001048  501E               	movf	(_EUSART1_FramingErrorHandler+1)^0,w,c
  1219  00104A  6EFE               	movwf	tosh,c
  1220  00104C  6AFF               	clrf	tosu,c
  1221  00104E  50FA               	movf	pclath,w,c
  1222  001050  0012               	return		;indir
  1223  001052                     i2u11_49:
  1224  001052                     i2l1164:
  1225                           
  1226                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
  1227  001052  A2AB               	btfss	171,1,c	;volatile
  1228  001054  EF2E  F008         	goto	i2u12_41
  1229  001058  EF30  F008         	goto	i2u12_40
  1230  00105C                     i2u12_41:
  1231  00105C  EF43  F008         	goto	i2l1170
  1232  001060                     i2u12_40:
  1233  001060                     
  1234                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  1235  001060  0E01               	movlw	low _eusart1RxStatusBuffer
  1236  001062  2426               	addwf	_eusart1RxHead^0,w,c	;volatile
  1237  001064  6ED9               	movwf	fsr2l,c
  1238  001066  6ADA               	clrf	fsr2h,c
  1239  001068  0E00               	movlw	high _eusart1RxStatusBuffer
  1240  00106A  22DA               	addwfc	fsr2h,f,c
  1241  00106C  84DF               	bsf	indf2,2,c
  1242  00106E                     
  1243                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  1244  00106E  D802               	call	i2u13_48
  1245  001070  EF43  F008         	goto	i2u13_49
  1246  001074                     i2u13_48:
  1247  001074  0005               	push	
  1248  001076  6EFA               	movwf	pclath,c
  1249  001078  501B               	movf	_EUSART1_OverrunErrorHandler^0,w,c
  1250  00107A  6EFD               	movwf	tosl,c
  1251  00107C  501C               	movf	(_EUSART1_OverrunErrorHandler+1)^0,w,c
  1252  00107E  6EFE               	movwf	tosh,c
  1253  001080  6AFF               	clrf	tosu,c
  1254  001082  50FA               	movf	pclath,w,c
  1255  001084  0012               	return		;indir
  1256  001086                     i2u13_49:
  1257  001086                     i2l1170:
  1258                           
  1259                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  1260  001086  0E01               	movlw	low _eusart1RxStatusBuffer
  1261  001088  2426               	addwf	_eusart1RxHead^0,w,c	;volatile
  1262  00108A  6ED9               	movwf	fsr2l,c
  1263  00108C  6ADA               	clrf	fsr2h,c
  1264  00108E  0E00               	movlw	high _eusart1RxStatusBuffer
  1265  001090  22DA               	addwfc	fsr2h,f,c
  1266  001092  50DF               	movf	indf2,w,c
  1267  001094  B4D8               	btfsc	status,2,c
  1268  001096  EF4F  F008         	goto	i2u14_41
  1269  00109A  EF51  F008         	goto	i2u14_40
  1270  00109E                     i2u14_41:
  1271  00109E  EF5F  F008         	goto	i2l1174
  1272  0010A2                     i2u14_40:
  1273  0010A2                     
  1274                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  1275  0010A2  D802               	call	i2u15_48
  1276  0010A4  EF5D  F008         	goto	i2u15_49
  1277  0010A8                     i2u15_48:
  1278  0010A8  0005               	push	
  1279  0010AA  6EFA               	movwf	pclath,c
  1280  0010AC  5019               	movf	_EUSART1_ErrorHandler^0,w,c
  1281  0010AE  6EFD               	movwf	tosl,c
  1282  0010B0  501A               	movf	(_EUSART1_ErrorHandler+1)^0,w,c
  1283  0010B2  6EFE               	movwf	tosh,c
  1284  0010B4  6AFF               	clrf	tosu,c
  1285  0010B6  50FA               	movf	pclath,w,c
  1286  0010B8  0012               	return		;indir
  1287  0010BA                     i2u15_49:
  1288                           
  1289                           ;mcc_generated_files/eusart1.c: 242:     } else {
  1290  0010BA  EF61  F008         	goto	i2l306
  1291  0010BE                     i2l1174:
  1292                           
  1293                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  1294  0010BE  ECEC  F008         	call	_EUSART1_RxDataHandler	;wreg free
  1295  0010C2                     i2l306:
  1296  0010C2  0012               	return		;funcret
  1297  0010C4                     __end_of_EUSART1_Receive_ISR:
  1298                           	callstack 0
  1299                           
  1300 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  1301 ;; Defined at:
  1302 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;		None
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;		None
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      void 
  1309 ;; Registers used:
  1310 ;;		None
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;Total ram usage:        0 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; This function calls:
  1323 ;;		Nothing
  1324 ;; This function is called by:
  1325 ;;		_EUSART1_Initialize
  1326 ;;		_EUSART1_Receive_ISR
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text14
  1331  00128E                     __ptext14:
  1332                           	callstack 0
  1333  00128E                     _EUSART1_DefaultOverrunErrorHandler:
  1334                           	callstack 25
  1335  00128E                     
  1336                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
  1337  00128E  98AB               	bcf	171,4,c	;volatile
  1338                           
  1339                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
  1340  001290  88AB               	bsf	171,4,c	;volatile
  1341  001292  0012               	return		;funcret
  1342  001294                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  1343                           	callstack 0
  1344                           
  1345 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  1346 ;; Defined at:
  1347 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;		None
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;		None
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		None
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1365 ;;Total ram usage:        0 bytes
  1366 ;; Hardware stack levels used:    1
  1367 ;; This function calls:
  1368 ;;		Nothing
  1369 ;; This function is called by:
  1370 ;;		_EUSART1_Initialize
  1371 ;;		_EUSART1_Receive_ISR
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           	psect	text15
  1376  00129E                     __ptext15:
  1377                           	callstack 0
  1378  00129E                     _EUSART1_DefaultFramingErrorHandler:
  1379                           	callstack 25
  1380  00129E  0012               	return		;funcret
  1381  0012A0                     __end_of_EUSART1_DefaultFramingErrorHandler:
  1382                           	callstack 0
  1383                           
  1384 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  1385 ;; Defined at:
  1386 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;		None
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;		None
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;Total ram usage:        0 bytes
  1405 ;; Hardware stack levels used:    1
  1406 ;; Hardware stack levels required when called:    1
  1407 ;; This function calls:
  1408 ;;		_EUSART1_RxDataHandler
  1409 ;; This function is called by:
  1410 ;;		_EUSART1_Initialize
  1411 ;;		_EUSART1_Receive_ISR
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           	psect	text16
  1416  001294                     __ptext16:
  1417                           	callstack 0
  1418  001294                     _EUSART1_DefaultErrorHandler:
  1419                           	callstack 24
  1420  001294                     
  1421                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  1422  001294  ECEC  F008         	call	_EUSART1_RxDataHandler	;wreg free
  1423  001298  0012               	return		;funcret
  1424  00129A                     __end_of_EUSART1_DefaultErrorHandler:
  1425                           	callstack 0
  1426                           
  1427 ;; *************** function _EUSART1_RxDataHandler *****************
  1428 ;; Defined at:
  1429 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;		None
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;		None
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      void 
  1436 ;; Registers used:
  1437 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;Total ram usage:        0 bytes
  1448 ;; Hardware stack levels used:    1
  1449 ;; This function calls:
  1450 ;;		Nothing
  1451 ;; This function is called by:
  1452 ;;		_EUSART1_Receive_ISR
  1453 ;;		_EUSART1_DefaultErrorHandler
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           	psect	text17
  1458  0011D8                     __ptext17:
  1459                           	callstack 0
  1460  0011D8                     _EUSART1_RxDataHandler:
  1461                           	callstack 25
  1462  0011D8                     
  1463                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  1464  0011D8  0E09               	movlw	low _eusart1RxBuffer
  1465  0011DA  2426               	addwf	_eusart1RxHead^0,w,c	;volatile
  1466  0011DC  6ED9               	movwf	fsr2l,c
  1467  0011DE  6ADA               	clrf	fsr2h,c
  1468  0011E0  0E00               	movlw	high _eusart1RxBuffer
  1469  0011E2  22DA               	addwfc	fsr2h,f,c
  1470  0011E4  CFAE FFDF          	movff	4014,indf2	;volatile
  1471  0011E8  2A26               	incf	_eusart1RxHead^0,f,c	;volatile
  1472  0011EA                     
  1473                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  1474  0011EA  0E07               	movlw	7
  1475  0011EC  6426               	cpfsgt	_eusart1RxHead^0,c	;volatile
  1476  0011EE  EFFB  F008         	goto	i2u1_41
  1477  0011F2  EFFD  F008         	goto	i2u1_40
  1478  0011F6                     i2u1_41:
  1479  0011F6  EFFF  F008         	goto	i2l1054
  1480  0011FA                     i2u1_40:
  1481  0011FA                     
  1482                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  1483  0011FA  0E00               	movlw	0
  1484  0011FC  6E26               	movwf	_eusart1RxHead^0,c	;volatile
  1485  0011FE                     i2l1054:
  1486                           
  1487                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  1488  0011FE  2A24               	incf	_eusart1RxCount^0,f,c	;volatile
  1489  001200  0012               	return		;funcret
  1490  001202                     __end_of_EUSART1_RxDataHandler:
  1491                           	callstack 0
  1492                           
  1493                           	psect	text18
  1494  000000                     __ptext18:
  1495                           	callstack 0
  1496  000000                     
  1497                           	psect	rparam
  1498  0000                     
  1499                           	psect	temp
  1500  00004F                     btemp:
  1501                           	callstack 0
  1502  00004F                     	ds	1
  1503  0000                     int$flags	set	btemp
  1504  0000                     wtemp8	set	btemp+1
  1505  0000                     ttemp5	set	btemp+1
  1506  0000                     ttemp6	set	btemp+4
  1507  0000                     ttemp7	set	btemp+8
  1508                           
  1509                           	psect	idloc
  1510                           
  1511                           ;Config register IDLOC0 @ 0x200000
  1512                           ;	unspecified, using default values
  1513  200000                     	org	2097152
  1514  200000  FF                 	db	255
  1515                           
  1516                           ;Config register IDLOC1 @ 0x200001
  1517                           ;	unspecified, using default values
  1518  200001                     	org	2097153
  1519  200001  FF                 	db	255
  1520                           
  1521                           ;Config register IDLOC2 @ 0x200002
  1522                           ;	unspecified, using default values
  1523  200002                     	org	2097154
  1524  200002  FF                 	db	255
  1525                           
  1526                           ;Config register IDLOC3 @ 0x200003
  1527                           ;	unspecified, using default values
  1528  200003                     	org	2097155
  1529  200003  FF                 	db	255
  1530                           
  1531                           ;Config register IDLOC4 @ 0x200004
  1532                           ;	unspecified, using default values
  1533  200004                     	org	2097156
  1534  200004  FF                 	db	255
  1535                           
  1536                           ;Config register IDLOC5 @ 0x200005
  1537                           ;	unspecified, using default values
  1538  200005                     	org	2097157
  1539  200005  FF                 	db	255
  1540                           
  1541                           ;Config register IDLOC6 @ 0x200006
  1542                           ;	unspecified, using default values
  1543  200006                     	org	2097158
  1544  200006  FF                 	db	255
  1545                           
  1546                           ;Config register IDLOC7 @ 0x200007
  1547                           ;	unspecified, using default values
  1548  200007                     	org	2097159
  1549  200007  FF                 	db	255
  1550                           
  1551                           	psect	config
  1552                           
  1553                           ; Padding undefined space
  1554  300000                     	org	3145728
  1555  300000  FF                 	db	255
  1556                           
  1557                           ;Config register CONFIG1H @ 0x300001
  1558                           ;	Oscillator Selection bits
  1559                           ;	FOSC = INTIO67, Internal oscillator block
  1560                           ;	4X PLL Enable
  1561                           ;	PLLCFG = OFF, Oscillator used directly
  1562                           ;	Primary clock enable bit
  1563                           ;	PRICLKEN = ON, Primary clock enabled
  1564                           ;	Fail-Safe Clock Monitor Enable bit
  1565                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1566                           ;	Internal/External Oscillator Switchover bit
  1567                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1568  300001                     	org	3145729
  1569  300001  28                 	db	40
  1570                           
  1571                           ;Config register CONFIG2L @ 0x300002
  1572                           ;	Power-up Timer Enable bit
  1573                           ;	PWRTEN = OFF, Power up timer disabled
  1574                           ;	Brown-out Reset Enable bits
  1575                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1576                           ;	Brown Out Reset Voltage bits
  1577                           ;	BORV = 190, VBOR set to 1.90 V nominal
  1578  300002                     	org	3145730
  1579  300002  1F                 	db	31
  1580                           
  1581                           ;Config register CONFIG2H @ 0x300003
  1582                           ;	Watchdog Timer Enable bits
  1583                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1584                           ;	Watchdog Timer Postscale Select bits
  1585                           ;	WDTPS = 32768, 1:32768
  1586  300003                     	org	3145731
  1587  300003  3C                 	db	60
  1588                           
  1589                           ; Padding undefined space
  1590  300004                     	org	3145732
  1591  300004  FF                 	db	255
  1592                           
  1593                           ;Config register CONFIG3H @ 0x300005
  1594                           ;	CCP2 MUX bit
  1595                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  1596                           ;	PORTB A/D Enable bit
  1597                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1598                           ;	P3A/CCP3 Mux bit
  1599                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  1600                           ;	HFINTOSC Fast Start-up
  1601                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  1602                           ;	Timer3 Clock input mux bit
  1603                           ;	T3CMX = PORTC0, T3CKI is on RC0
  1604                           ;	ECCP2 B output mux bit
  1605                           ;	P2BMX = PORTB5, P2B is on RB5
  1606                           ;	MCLR Pin Enable bit
  1607                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  1608  300005                     	org	3145733
  1609  300005  BF                 	db	191
  1610                           
  1611                           ;Config register CONFIG4L @ 0x300006
  1612                           ;	Stack Full/Underflow Reset Enable bit
  1613                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1614                           ;	Single-Supply ICSP Enable bit
  1615                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  1616                           ;	Extended Instruction Set Enable bit
  1617                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1618                           ;	Background Debug
  1619                           ;	DEBUG = OFF, Disabled
  1620  300006                     	org	3145734
  1621  300006  85                 	db	133
  1622                           
  1623                           ; Padding undefined space
  1624  300007                     	org	3145735
  1625  300007  FF                 	db	255
  1626                           
  1627                           ;Config register CONFIG5L @ 0x300008
  1628                           ;	Code Protection Block 0
  1629                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1630                           ;	Code Protection Block 1
  1631                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1632                           ;	Code Protection Block 2
  1633                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1634                           ;	Code Protection Block 3
  1635                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1636  300008                     	org	3145736
  1637  300008  0F                 	db	15
  1638                           
  1639                           ;Config register CONFIG5H @ 0x300009
  1640                           ;	Boot Block Code Protection bit
  1641                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1642                           ;	Data EEPROM Code Protection bit
  1643                           ;	CPD = OFF, Data EEPROM not code-protected
  1644  300009                     	org	3145737
  1645  300009  C0                 	db	192
  1646                           
  1647                           ;Config register CONFIG6L @ 0x30000A
  1648                           ;	Write Protection Block 0
  1649                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1650                           ;	Write Protection Block 1
  1651                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1652                           ;	Write Protection Block 2
  1653                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1654                           ;	Write Protection Block 3
  1655                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1656  30000A                     	org	3145738
  1657  30000A  0F                 	db	15
  1658                           
  1659                           ;Config register CONFIG6H @ 0x30000B
  1660                           ;	Configuration Register Write Protection bit
  1661                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1662                           ;	Boot Block Write Protection bit
  1663                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1664                           ;	Data EEPROM Write Protection bit
  1665                           ;	WRTD = OFF, Data EEPROM not write-protected
  1666  30000B                     	org	3145739
  1667  30000B  E0                 	db	224
  1668                           
  1669                           ;Config register CONFIG7L @ 0x30000C
  1670                           ;	Table Read Protection Block 0
  1671                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1672                           ;	Table Read Protection Block 1
  1673                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1674                           ;	Table Read Protection Block 2
  1675                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1676                           ;	Table Read Protection Block 3
  1677                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1678  30000C                     	org	3145740
  1679  30000C  0F                 	db	15
  1680                           
  1681                           ;Config register CONFIG7H @ 0x30000D
  1682                           ;	Boot Block Table Read Protection bit
  1683                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1684  30000D                     	org	3145741
  1685  30000D  40                 	db	64
  1686                           tosu	equ	0xFFF
  1687                           tosh	equ	0xFFE
  1688                           tosl	equ	0xFFD
  1689                           stkptr	equ	0xFFC
  1690                           pclatu	equ	0xFFB
  1691                           pclath	equ	0xFFA
  1692                           pcl	equ	0xFF9
  1693                           tblptru	equ	0xFF8
  1694                           tblptrh	equ	0xFF7
  1695                           tblptrl	equ	0xFF6
  1696                           tablat	equ	0xFF5
  1697                           prodh	equ	0xFF4
  1698                           prodl	equ	0xFF3
  1699                           indf0	equ	0xFEF
  1700                           postinc0	equ	0xFEE
  1701                           postdec0	equ	0xFED
  1702                           preinc0	equ	0xFEC
  1703                           plusw0	equ	0xFEB
  1704                           fsr0h	equ	0xFEA
  1705                           fsr0l	equ	0xFE9
  1706                           wreg	equ	0xFE8
  1707                           indf1	equ	0xFE7
  1708                           postinc1	equ	0xFE6
  1709                           postdec1	equ	0xFE5
  1710                           preinc1	equ	0xFE4
  1711                           plusw1	equ	0xFE3
  1712                           fsr1h	equ	0xFE2
  1713                           fsr1l	equ	0xFE1
  1714                           bsr	equ	0xFE0
  1715                           indf2	equ	0xFDF
  1716                           postinc2	equ	0xFDE
  1717                           postdec2	equ	0xFDD
  1718                           preinc2	equ	0xFDC
  1719                           plusw2	equ	0xFDB
  1720                           fsr2h	equ	0xFDA
  1721                           fsr2l	equ	0xFD9
  1722                           status	equ	0xFD8

Data Sizes:
    Strings     12
    Constant    0
    Data        31
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      6      78
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    PASSWORD	PTR unsigned char  size(2) Largest target is 1
		 -> STR_2(CODE[1]), 

    SSID	PTR unsigned char [1] size(2) Largest target is 12
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     490
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      6      4E       1       83.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4E      12        0.0%
DATA                 0      0      4E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Oct 18 22:56:09 2020

                      _eusart1TxBufferRemaining 0027                                              l22 122E  
                                            l25 123C                                              l19 124E  
                                            l52 11D6                                              l62 1254  
                                            l63 1254                                              u20 123C  
                                            u21 1238                                             l322 1282  
                                           l331 1264                                             l325 1278  
                                           l334 126E                                             l328 128C  
                                           l259 1136                                             l349 129C  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l1220 1270  
                                          l1060 11BA                                            l1222 1284  
                                          l1214 1266                                            l1230 10E0  
                                          l1062 11BC                                            l1216 125C  
                                          l1240 10F4                                            l1232 10E4  
                                          l1224 10C4                                            l1056 129A  
                                          l1064 11D4                                            l1218 127A  
                                          l1242 1100                                            l1234 10E8  
                                          l1226 10C6                                            l1066 1222  
                                          l1058 11AE                                            l1250 1242  
                                          l1244 110C                                            l1236 10EC  
                                          l1228 10D2                                            l1252 1246  
                                          l1246 1134                                            l1238 10F0  
                                          l1254 124A                                            l1248 123E  
                                          l1256 1250                                            STR_1 1001  
                                          STR_2 100C                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          _SSID 0047                                            _WPUB 000F61  
                                          _main 1250                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          fsr2l 000FD9                                            btemp 004F  
                                          start 00AC                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 000000                  __size_of_OSCILLATOR_Initialize 001C  
                 __end_of_OSCILLATOR_Initialize 123E                           _eusart1RxStatusBuffer 0001  
                                         ?_main 0049                                           i2l310 1200  
                                         i2l313 129E                                           i2l306 10C2  
                                         i2l316 1292                                           i2l319 1298  
                                         i2l360 0098                                           i2l355 0060  
                                         i2l356 0098                                           i2l296 1174  
                                         i2l299 1176                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                          _EUSART1_Transmit_ISR 1138                                           pclath 000FFA  
                                         tablat 000FF5                                           ttemp5 0050  
                                         ttemp6 0053                                           ttemp7 0057  
                                         status 000FD8                                           wtemp8 0050  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 12A0  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0049  
           ?_EUSART1_DefaultFramingErrorHandler 0049              _EUSART1_DefaultFramingErrorHandler 129E  
                               __initialization 1178                      __end_of_EUSART1_Initialize 1138  
                                  __end_of_main 125C                     ?_INTERRUPT_InterruptManager 0049  
                                        ??_main 004F                                   __activetblptr 000003  
                         ?_EUSART1_Transmit_ISR 0049                                          _ANSELA 000F38  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        i2l1050 11EA                                          i2l1210 006E  
                                        i2l1202 001A                                          i2l1052 11FA  
                                        i2l1212 007C                                          i2l1204 0028  
                                        i2l1054 11FE                                          i2l1046 11D8  
                                        i2l1150 115A                                          i2l1206 0036  
                                        i2l1048 11E8                                          i2l1160 102C  
                                        i2l1152 116A                                          i2l1144 1138  
                                        i2l1208 0044                                          i2l1170 1086  
                                        i2l1162 103A                                          i2l1154 116E  
                                        i2l1146 1148                                          i2l1092 128E  
                                        i2l1172 10A2                                          i2l1164 1052  
                                        i2l1156 100E                                          i2l1148 1158  
                                        i2l1094 1294                                          i2l1174 10BE  
                                        i2l1166 1060                                          i2l1158 101E  
                                        i2l1168 106E                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                          _SPBRG1 000FAF  
                                        i2u1_40 11FA                                          i2u1_41 11F6  
                                        i2u8_40 1148                                          i2u8_41 1144  
                                        i2u9_40 116A                                          i2u9_41 1166  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                      ?_EUSART1_SetErrorHandler 004D                                          clear_0 119E  
              ??_EUSART1_SetOverrunErrorHandler 004F                 ?_EUSART1_SetOverrunErrorHandler 004D  
                                  __pdataCOMRAM 002A                                    __mediumconst 0000  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                 _eusart1RxBuffer 0009  
                 __size_of_INTERRUPT_Initialize 0004                                 _eusart1TxBuffer 0011  
                             _SYSTEM_Initialize 123E                                      __accesstop 0060  
                       __end_of__initialization 11A4                              ?_SYSTEM_Initialize 0049  
                                 ___rparam_used 000001                  __size_of_EUSART1_RxDataHandler 002A  
                 __end_of_EUSART1_RxDataHandler 1202                                  __pcstackCOMRAM 0049  
                           ??_SYSTEM_Initialize 004F                                      __clockData 002A  
                        ??_EUSART1_Transmit_ISR 0049                     __end_of_EUSART1_Receive_ISR 10C4  
                     __end_of_SYSTEM_Initialize 1250                                   _eusart1RxHead 0026  
                                 _eusart1TxHead 0029                                   _eusart1RxTail 0025  
                                 _eusart1TxTail 0028               _EUSART1_TxDefaultInterruptHandler 0021  
               ??_EUSART1_SetRxInterruptHandler 004F                 __end_of_EUSART1_SetErrorHandler 128E  
        __end_of_EUSART1_SetFramingErrorHandler 1284         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 127A                    ?_EUSART1_DefaultErrorHandler 0049  
                                       _OSCCON2 000FD2                                         i2u10_40 102C  
                                       i2u10_41 1028                                         i2u12_40 1060  
                                       i2u11_48 1040                                         i2u20_40 006E  
                                       i2u12_41 105C                                         i2u11_49 1052  
                                       i2u20_41 006A                                         i2u21_40 007C  
                                       i2u21_41 0078                                         i2u14_40 10A2  
                                       i2u13_48 1074                                         i2u14_41 109E  
                                       i2u13_49 1086                                         i2u22_48 0082  
                                       i2u22_49 0094                                         i2u15_48 10A8  
                                       i2u16_40 0028                                         i2u15_49 10BA  
                                       i2u16_41 0024                                         i2u17_40 0036  
                                       i2u17_41 0032                                         i2u18_40 0044  
                                       i2u18_41 0040                                         i2u19_48 004A  
                                       i2u19_49 005C                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                         __Hparam 0000  
                                       __Lparam 0000                                    __psmallconst 1000  
                                       __pcinit 1178                                         __ramtop 1000  
                                       __ptext0 1250                                         __ptext1 123E  
                                       __ptext2 11AE                                         __ptext3 1222  
                                       __ptext4 129A                                         __ptext5 10C4  
                                       __ptext6 125C                                         __ptext7 1266  
                                       __ptext8 1270                                         __ptext9 127A  
                         _OSCILLATOR_Initialize 1222                              _EUSART1_Initialize 10C4  
                      ??_PIN_MANAGER_Initialize 004D                   ??_EUSART1_DefaultErrorHandler 0049  
                    __size_of_SYSTEM_Initialize 0012                            end_of_initialization 11A4  
                           ?_EUSART1_Initialize 0049                     _EUSART1_OverrunErrorHandler 001B  
         __end_of_EUSART1_SetRxInterruptHandler 1270          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 1266                                         postdec1 000FE5  
                                       postinc0 000FEE                            ??_EUSART1_Initialize 004F  
                       fp__EUSART1_Transmit_ISR 0000                __size_of_EUSART1_SetErrorHandler 000A  
          __size_of_EUSART1_DefaultErrorHandler 0006                    __end_of_INTERRUPT_Initialize 129E  
                                 __pidataCOMRAM 1202                          ?_OSCILLATOR_Initialize 0049  
                           start_initialization 1178                 __size_of_PIN_MANAGER_Initialize 002A  
 EUSART1_SetRxInterruptHandler@interruptHandler 004D   EUSART1_SetTxInterruptHandler@interruptHandler 004D  
                        fp__EUSART1_Receive_ISR 0000                           _EUSART1_RxDataHandler 11D8  
                ?_EUSART1_SetRxInterruptHandler 004D                                  _eusart1RxCount 0024  
                                   __pbssCOMRAM 0001               _EUSART1_RxDefaultInterruptHandler 001F  
                 __size_of_EUSART1_Transmit_ISR 0040                 ??_EUSART1_SetTxInterruptHandler 004F  
              ??_EUSART1_SetFramingErrorHandler 004F                 ?_EUSART1_SetFramingErrorHandler 004D  
                  __size_of_EUSART1_Receive_ISR 00B6                          _PIN_MANAGER_Initialize 11AE  
                                     __pintcode 0008                    ??_INTERRUPT_InterruptManager 0049  
                                   __smallconst 1000                                        _BAUDCON1 000FB8  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 1294  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0049  
           ?_EUSART1_DefaultOverrunErrorHandler 0049              _EUSART1_DefaultOverrunErrorHandler 128E  
                          _EUSART1_ErrorHandler 0019                         _EUSART1_SetErrorHandler 1284  
                          _INTERRUPT_Initialize 129A         EUSART1_SetErrorHandler@interruptHandler 004D  
                                      _PIE1bits 000F9D                                        _PASSWORD 0045  
           __size_of_INTERRUPT_InterruptManager 00A4                                        _PIR1bits 000F9E  
                        ?_EUSART1_RxDataHandler 0049                                        _RCONbits 000FD0  
                                   _INTCON2bits 000FF1                                       copy_data0 118C  
                         ?_INTERRUPT_Initialize 0049           __end_of_EUSART1_SetTxInterruptHandler 1266  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 125C  
                                      __Hrparam 0000                                        __Lrparam 0000  
                       ??_OSCILLATOR_Initialize 004D                     __size_of_EUSART1_Initialize 0074  
                     ??_EUSART1_SetErrorHandler 004F             __end_of_EUSART1_DefaultErrorHandler 129A  
                   _EUSART1_DefaultErrorHandler 1294                                        __ptext10 1284  
                                      __ptext12 1138                                        __ptext13 100E  
                                      __ptext14 128E                                        __ptext15 129E  
                                      __ptext16 1294                                        __ptext17 11D8  
                                      __ptext18 0000                                   __size_of_main 000C  
EUSART1_SetOverrunErrorHandler@interruptHandler 004D                                        int$flags 004F  
            __end_of_INTERRUPT_InterruptManager 00AC                      _INTERRUPT_InterruptManager 0008  
                   _EUSART1_FramingErrorHandler 001D                             _EUSART1_Receive_ISR 100E  
                                    _INTCONbits 000FF2                          ??_INTERRUPT_Initialize 004D  
                                      intlevel2 0000                            ?_EUSART1_Receive_ISR 0049  
                       ?_PIN_MANAGER_Initialize 0049          __end_of_EUSART1_SetOverrunErrorHandler 127A  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 1270  
                                    _RCSTA1bits 000FAB                    __end_of_EUSART1_Transmit_ISR 1178  
                              __clockDataString 0039  EUSART1_SetFramingErrorHandler@interruptHandler 004D  
                ?_EUSART1_SetTxInterruptHandler 004D                              _eusart1RxLastError 0023  
                         ??_EUSART1_Receive_ISR 0049                  __end_of_PIN_MANAGER_Initialize 11D8  
                       ??_EUSART1_RxDataHandler 0049  
