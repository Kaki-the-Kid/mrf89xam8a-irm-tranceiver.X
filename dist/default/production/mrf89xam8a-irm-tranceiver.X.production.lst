

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Oct 18 22:04:59 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.30
    17                           ; Generated 26/08/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F26K22 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _ANSELA	set	3896
    52  0000                     _ANSELB	set	3897
    53  0000                     _ANSELC	set	3898
    54  0000                     _INTCONbits	set	4082
    55  0000                     _INTCON2bits	set	4081
    56  0000                     _WPUB	set	3937
    57  0000                     _TRISC	set	3988
    58  0000                     _TRISB	set	3987
    59  0000                     _TRISA	set	3986
    60  0000                     _LATC	set	3979
    61  0000                     _LATB	set	3978
    62  0000                     _LATA	set	3977
    63  0000                     _OSCTUNE	set	3995
    64  0000                     _OSCCON2	set	4050
    65  0000                     _OSCCON	set	4051
    66  0000                     _PLLRDY	set	32407
    67                           
    68                           ; #config settings
    69                           
    70                           	psect	cinit
    71  0000'                    __pcinit:
    72                           	callstack 0
    73  0000'                    start_initialization:
    74                           	callstack 0
    75  0000'                    __initialization:
    76                           	callstack 0
    77  0000'                    end_of_initialization:
    78                           	callstack 0
    79  0000'                    __end_of__initialization:
    80                           	callstack 0
    81  0000' 0100               	movlb	0
    82  0002' EF00' F000'        	goto	_main	;jump to C main() function
    83                           
    84                           	psect	cstackCOMRAM
    85  0000'                    __pcstackCOMRAM:
    86                           	callstack 0
    87  0000'                    
    88                           ; 2 bytes @ 0x0
    89 ;;
    90 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    91 ;;
    92 ;; *************** function _main *****************
    93 ;; Defined at:
    94 ;;		line 64 in file "main.c"
    95 ;; Parameters:    Size  Location     Type
    96 ;;		None
    97 ;; Auto vars:     Size  Location     Type
    98 ;;		None
    99 ;; Return value:  Size  Location     Type
   100 ;;                  1    wreg      void 
   101 ;; Registers used:
   102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   103 ;; Tracked objects:
   104 ;;		On entry : 0/0
   105 ;;		On exit  : 0/0
   106 ;;		Unchanged: 0/0
   107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   112 ;;Total ram usage:        0 bytes
   113 ;; Hardware stack levels required when called:    2
   114 ;; This function calls:
   115 ;;		_INTERRUPT_GlobalInterruptEnable
   116 ;;		_INTERRUPT_PeripheralInterruptEnable
   117 ;;		_SYSTEM_Initialize
   118 ;; This function is called by:
   119 ;;		Startup code after reset
   120 ;; This function uses a non-reentrant model
   121 ;;
   122                           
   123                           	psect	text0
   124  0000'                    __ptext0:
   125                           	callstack 0
   126  0000'                    _main:
   127                           	callstack 29
   128  0000'                    
   129                           ;main.c: 67:     SYSTEM_Initialize();
   130  0000' EC00' F000'        	call	_SYSTEM_Initialize	;wreg free
   131  0004'                    
   132                           ;main.c: 74:     INTERRUPT_GlobalInterruptEnable();
   133  0004' EC00' F000'        	call	_INTERRUPT_GlobalInterruptEnable	;wreg free
   134  0008'                    
   135                           ;main.c: 77:     INTERRUPT_PeripheralInterruptEnable();
   136  0008' EC00' F000'        	call	_INTERRUPT_PeripheralInterruptEnable	;wreg free
   137  000C'                    l62:
   138  000C' EF00' F000'        	goto	l62
   139  0010' EF00' F000'        	goto	start
   140  0014'                    __end_of_main:
   141                           	callstack 0
   142                           
   143 ;; *************** function _SYSTEM_Initialize *****************
   144 ;; Defined at:
   145 ;;		line 50 in file "mcc_generated_files/mcc.c"
   146 ;; Parameters:    Size  Location     Type
   147 ;;		None
   148 ;; Auto vars:     Size  Location     Type
   149 ;;		None
   150 ;; Return value:  Size  Location     Type
   151 ;;                  1    wreg      void 
   152 ;; Registers used:
   153 ;;		wreg, status,2, cstack
   154 ;; Tracked objects:
   155 ;;		On entry : 0/0
   156 ;;		On exit  : 0/0
   157 ;;		Unchanged: 0/0
   158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   163 ;;Total ram usage:        0 bytes
   164 ;; Hardware stack levels used:    1
   165 ;; Hardware stack levels required when called:    1
   166 ;; This function calls:
   167 ;;		_OSCILLATOR_Initialize
   168 ;;		_PIN_MANAGER_Initialize
   169 ;; This function is called by:
   170 ;;		_main
   171 ;; This function uses a non-reentrant model
   172 ;;
   173                           
   174                           	psect	text1
   175  0000'                    __ptext1:
   176                           	callstack 0
   177  0000'                    _SYSTEM_Initialize:
   178                           	callstack 29
   179  0000'                    
   180                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   181  0000' EC00' F000'        	call	_PIN_MANAGER_Initialize	;wreg free
   182                           
   183                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   184  0004' EC00' F000'        	call	_OSCILLATOR_Initialize	;wreg free
   185  0008' 0012               	return		;funcret
   186  000A'                    __end_of_SYSTEM_Initialize:
   187                           	callstack 0
   188                           
   189 ;; *************** function _PIN_MANAGER_Initialize *****************
   190 ;; Defined at:
   191 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   192 ;; Parameters:    Size  Location     Type
   193 ;;		None
   194 ;; Auto vars:     Size  Location     Type
   195 ;;		None
   196 ;; Return value:  Size  Location     Type
   197 ;;                  1    wreg      void 
   198 ;; Registers used:
   199 ;;		wreg, status,2
   200 ;; Tracked objects:
   201 ;;		On entry : 0/0
   202 ;;		On exit  : 0/0
   203 ;;		Unchanged: 0/0
   204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   209 ;;Total ram usage:        0 bytes
   210 ;; Hardware stack levels used:    1
   211 ;; This function calls:
   212 ;;		Nothing
   213 ;; This function is called by:
   214 ;;		_SYSTEM_Initialize
   215 ;; This function uses a non-reentrant model
   216 ;;
   217                           
   218                           	psect	text2
   219  0000'                    __ptext2:
   220                           	callstack 0
   221  0000'                    _PIN_MANAGER_Initialize:
   222                           	callstack 29
   223  0000'                    
   224                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
   225  0000' 0E00               	movlw	0
   226  0002' 6E89               	movwf	137,c	;volatile
   227                           
   228                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
   229  0004' 0E00               	movlw	0
   230  0006' 6E8A               	movwf	138,c	;volatile
   231                           
   232                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
   233  0008' 0E00               	movlw	0
   234  000A' 6E8B               	movwf	139,c	;volatile
   235  000C'                    
   236                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
   237  000C' 6892               	setf	146,c	;volatile
   238  000E'                    
   239                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
   240  000E' 6893               	setf	147,c	;volatile
   241  0010'                    
   242                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
   243  0010' 6894               	setf	148,c	;volatile
   244                           
   245                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFC;
   246  0012' 0EFC               	movlw	252
   247  0014' 010F               	movlb	15	; () banked
   248  0016' 6F3A               	movwf	58,b	;volatile
   249                           
   250                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
   251  0018' 0E3F               	movlw	63
   252  001A' 6F39               	movwf	57,b	;volatile
   253                           
   254                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
   255  001C' 0E2F               	movlw	47
   256  001E' 6F38               	movwf	56,b	;volatile
   257                           
   258                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
   259  0020' 0E00               	movlw	0
   260  0022' 6E61               	movwf	97,c	;volatile
   261  0024'                    
   262                           ; BSR set to: 15
   263                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
   264  0024' 8EF1               	bsf	241,7,c	;volatile
   265  0026'                    
   266                           ; BSR set to: 15
   267  0026' 0012               	return		;funcret
   268  0028'                    __end_of_PIN_MANAGER_Initialize:
   269                           	callstack 0
   270                           
   271 ;; *************** function _OSCILLATOR_Initialize *****************
   272 ;; Defined at:
   273 ;;		line 57 in file "mcc_generated_files/mcc.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;		None
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, status,2
   282 ;; Tracked objects:
   283 ;;		On entry : 0/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   291 ;;Total ram usage:        0 bytes
   292 ;; Hardware stack levels used:    1
   293 ;; This function calls:
   294 ;;		Nothing
   295 ;; This function is called by:
   296 ;;		_SYSTEM_Initialize
   297 ;; This function uses a non-reentrant model
   298 ;;
   299                           
   300                           	psect	text3
   301  0000'                    __ptext3:
   302                           	callstack 0
   303  0000'                    _OSCILLATOR_Initialize:
   304                           	callstack 29
   305  0000'                    
   306                           ;mcc_generated_files/mcc.c: 60:     OSCCON = 0x70;
   307  0000' 0E70               	movlw	112
   308  0002' 6ED3               	movwf	211,c	;volatile
   309                           
   310                           ;mcc_generated_files/mcc.c: 62:     OSCCON2 = 0x04;
   311  0004' 0E04               	movlw	4
   312  0006' 6ED2               	movwf	210,c	;volatile
   313                           
   314                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x40;
   315  0008' 0E40               	movlw	64
   316  000A' 6E9B               	movwf	155,c	;volatile
   317  000C'                    l18:
   318                           
   319                           ;mcc_generated_files/mcc.c: 66:     while(PLLRDY == 0)
   320  000C' AED2               	btfss	4050,7,c	;volatile
   321  000E' EF00' F000'        	goto	u11
   322  0012' EF00' F000'        	goto	u10
   323  0016'                    u11:
   324  0016' EF00' F000'        	goto	l18
   325  001A'                    u10:
   326  001A' 0012               	return		;funcret
   327  001C'                    __end_of_OSCILLATOR_Initialize:
   328                           	callstack 0
   329  0000                     
   330                           	psect	rparam
   331  0000                     
   332                           	psect	idloc
   333                           
   334                           ;Config register IDLOC0 @ 0x200000
   335                           ;	unspecified, using default values
   336  200000                     	org	2097152
   337  200000  FF                 	db	255
   338                           
   339                           ;Config register IDLOC1 @ 0x200001
   340                           ;	unspecified, using default values
   341  200001                     	org	2097153
   342  200001  FF                 	db	255
   343                           
   344                           ;Config register IDLOC2 @ 0x200002
   345                           ;	unspecified, using default values
   346  200002                     	org	2097154
   347  200002  FF                 	db	255
   348                           
   349                           ;Config register IDLOC3 @ 0x200003
   350                           ;	unspecified, using default values
   351  200003                     	org	2097155
   352  200003  FF                 	db	255
   353                           
   354                           ;Config register IDLOC4 @ 0x200004
   355                           ;	unspecified, using default values
   356  200004                     	org	2097156
   357  200004  FF                 	db	255
   358                           
   359                           ;Config register IDLOC5 @ 0x200005
   360                           ;	unspecified, using default values
   361  200005                     	org	2097157
   362  200005  FF                 	db	255
   363                           
   364                           ;Config register IDLOC6 @ 0x200006
   365                           ;	unspecified, using default values
   366  200006                     	org	2097158
   367  200006  FF                 	db	255
   368                           
   369                           ;Config register IDLOC7 @ 0x200007
   370                           ;	unspecified, using default values
   371  200007                     	org	2097159
   372  200007  FF                 	db	255
   373                           
   374                           	psect	config
   375                           
   376                           ; Padding undefined space
   377  300000                     	org	3145728
   378  300000  FF                 	db	255
   379                           
   380                           ;Config register CONFIG1H @ 0x300001
   381                           ;	Oscillator Selection bits
   382                           ;	FOSC = INTIO67, Internal oscillator block
   383                           ;	4X PLL Enable
   384                           ;	PLLCFG = OFF, Oscillator used directly
   385                           ;	Primary clock enable bit
   386                           ;	PRICLKEN = ON, Primary clock enabled
   387                           ;	Fail-Safe Clock Monitor Enable bit
   388                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   389                           ;	Internal/External Oscillator Switchover bit
   390                           ;	IESO = OFF, Oscillator Switchover mode disabled
   391  300001                     	org	3145729
   392  300001  28                 	db	40
   393                           
   394                           ;Config register CONFIG2L @ 0x300002
   395                           ;	Power-up Timer Enable bit
   396                           ;	PWRTEN = OFF, Power up timer disabled
   397                           ;	Brown-out Reset Enable bits
   398                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   399                           ;	Brown Out Reset Voltage bits
   400                           ;	BORV = 190, VBOR set to 1.90 V nominal
   401  300002                     	org	3145730
   402  300002  1F                 	db	31
   403                           
   404                           ;Config register CONFIG2H @ 0x300003
   405                           ;	Watchdog Timer Enable bits
   406                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   407                           ;	Watchdog Timer Postscale Select bits
   408                           ;	WDTPS = 32768, 1:32768
   409  300003                     	org	3145731
   410  300003  3C                 	db	60
   411                           
   412                           ; Padding undefined space
   413  300004                     	org	3145732
   414  300004  FF                 	db	255
   415                           
   416                           ;Config register CONFIG3H @ 0x300005
   417                           ;	CCP2 MUX bit
   418                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
   419                           ;	PORTB A/D Enable bit
   420                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   421                           ;	P3A/CCP3 Mux bit
   422                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
   423                           ;	HFINTOSC Fast Start-up
   424                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
   425                           ;	Timer3 Clock input mux bit
   426                           ;	T3CMX = PORTC0, T3CKI is on RC0
   427                           ;	ECCP2 B output mux bit
   428                           ;	P2BMX = PORTB5, P2B is on RB5
   429                           ;	MCLR Pin Enable bit
   430                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
   431  300005                     	org	3145733
   432  300005  BF                 	db	191
   433                           
   434                           ;Config register CONFIG4L @ 0x300006
   435                           ;	Stack Full/Underflow Reset Enable bit
   436                           ;	STVREN = ON, Stack full/underflow will cause Reset
   437                           ;	Single-Supply ICSP Enable bit
   438                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
   439                           ;	Extended Instruction Set Enable bit
   440                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   441                           ;	Background Debug
   442                           ;	DEBUG = OFF, Disabled
   443  300006                     	org	3145734
   444  300006  85                 	db	133
   445                           
   446                           ; Padding undefined space
   447  300007                     	org	3145735
   448  300007  FF                 	db	255
   449                           
   450                           ;Config register CONFIG5L @ 0x300008
   451                           ;	Code Protection Block 0
   452                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   453                           ;	Code Protection Block 1
   454                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   455                           ;	Code Protection Block 2
   456                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   457                           ;	Code Protection Block 3
   458                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   459  300008                     	org	3145736
   460  300008  0F                 	db	15
   461                           
   462                           ;Config register CONFIG5H @ 0x300009
   463                           ;	Boot Block Code Protection bit
   464                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   465                           ;	Data EEPROM Code Protection bit
   466                           ;	CPD = OFF, Data EEPROM not code-protected
   467  300009                     	org	3145737
   468  300009  C0                 	db	192
   469                           
   470                           ;Config register CONFIG6L @ 0x30000A
   471                           ;	Write Protection Block 0
   472                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   473                           ;	Write Protection Block 1
   474                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   475                           ;	Write Protection Block 2
   476                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   477                           ;	Write Protection Block 3
   478                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   479  30000A                     	org	3145738
   480  30000A  0F                 	db	15
   481                           
   482                           ;Config register CONFIG6H @ 0x30000B
   483                           ;	Configuration Register Write Protection bit
   484                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   485                           ;	Boot Block Write Protection bit
   486                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   487                           ;	Data EEPROM Write Protection bit
   488                           ;	WRTD = OFF, Data EEPROM not write-protected
   489  30000B                     	org	3145739
   490  30000B  E0                 	db	224
   491                           
   492                           ;Config register CONFIG7L @ 0x30000C
   493                           ;	Table Read Protection Block 0
   494                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   495                           ;	Table Read Protection Block 1
   496                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   497                           ;	Table Read Protection Block 2
   498                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   499                           ;	Table Read Protection Block 3
   500                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   501  30000C                     	org	3145740
   502  30000C  0F                 	db	15
   503                           
   504                           ;Config register CONFIG7H @ 0x30000D
   505                           ;	Boot Block Table Read Protection bit
   506                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   507  30000D                     	org	3145741
   508  30000D  40                 	db	64
   509                           tosu	equ	0xFFF
   510                           tosh	equ	0xFFE
   511                           tosl	equ	0xFFD
   512                           stkptr	equ	0xFFC
   513                           pclatu	equ	0xFFB
   514                           pclath	equ	0xFFA
   515                           pcl	equ	0xFF9
   516                           tblptru	equ	0xFF8
   517                           tblptrh	equ	0xFF7
   518                           tblptrl	equ	0xFF6
   519                           tablat	equ	0xFF5
   520                           prodh	equ	0xFF4
   521                           prodl	equ	0xFF3
   522                           indf0	equ	0xFEF
   523                           postinc0	equ	0xFEE
   524                           postdec0	equ	0xFED
   525                           preinc0	equ	0xFEC
   526                           plusw0	equ	0xFEB
   527                           fsr0h	equ	0xFEA
   528                           fsr0l	equ	0xFE9
   529                           wreg	equ	0xFE8
   530                           indf1	equ	0xFE7
   531                           postinc1	equ	0xFE6
   532                           postdec1	equ	0xFE5
   533                           preinc1	equ	0xFE4
   534                           plusw1	equ	0xFE3
   535                           fsr1h	equ	0xFE2
   536                           fsr1l	equ	0xFE1
   537                           bsr	equ	0xFE0
   538                           indf2	equ	0xFDF
   539                           postinc2	equ	0xFDE
   540                           postdec2	equ	0xFDD
   541                           preinc2	equ	0xFDC
   542                           plusw2	equ	0xFDB
   543                           fsr2h	equ	0xFDA
   544                           fsr2l	equ	0xFD9
   545                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
    _INTERRUPT_GlobalInterruptEnable
_INTERRUPT_PeripheralInterruptEnable
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INTERRUPT_PeripheralInterruptEnable                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INTERRUPT_GlobalInterruptEnable                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INTERRUPT_GlobalInterruptEnable
   _INTERRUPT_PeripheralInterruptEnable
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
ABS                  0      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BIGRAM             F37      0       0      37        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Oct 18 22:04:59 2020

                                   l21 00001A                                     l15 000008  
                                   l18 00000C                                     l62 00000C  
                                   l63 00000C                                     l48 000026  
                                   u10 00001A                                     u11 000016  
                                  l741 000000                                    l751 000000  
                                  l743 00000C                                    l745 00000E  
                                  l753 000000                                    l761 000008  
                                  l747 000010                                    l749 000024  
                                  l757 000000                                    l759 000004  
                                 _LATA 000F89                                   _LATB 000F8A  
                                 _LATC 000F8B                                   _WPUB 000F61  
                                 _main 000000                                   start 000000* 
                         ___param_bank 000000         __size_of_OSCILLATOR_Initialize 000000  
        __end_of_OSCILLATOR_Initialize 00001C                                  ?_main 000000  
                                _TRISA 000F92                                  _TRISB 000F93  
                                _TRISC 000F94                        __initialization 000000  
                         __end_of_main 000014                                 ??_main 000000  
                        __activetblptr 000000                                 _ANSELA 000F38  
                               _ANSELB 000F39                                 _ANSELC 000F3A  
                               _OSCCON 000FD3                                 _PLLRDY 007E97  
                    _SYSTEM_Initialize 000000                             __accesstop 000000* 
              __end_of__initialization 000000                     ?_SYSTEM_Initialize 000000  
                        ___rparam_used 000001                         __pcstackCOMRAM 000000  
                  ??_SYSTEM_Initialize 000000              __end_of_SYSTEM_Initialize 00000A  
                              _OSCCON2 000FD2                                _OSCTUNE 000F9B  
                              __Hparam 000000                                __Lparam 000000  
                              __pcinit 000000                                __ramtop 000000* 
                              __ptext0 000000                                __ptext1 000000  
                              __ptext2 000000                                __ptext3 000000  
                _OSCILLATOR_Initialize 000000               ??_PIN_MANAGER_Initialize 000000  
           __size_of_SYSTEM_Initialize 000000                   end_of_initialization 000000  
 ?_INTERRUPT_PeripheralInterruptEnable 000000  ??_INTERRUPT_PeripheralInterruptEnable 000000  
  _INTERRUPT_PeripheralInterruptEnable 000000*                ?_OSCILLATOR_Initialize 000000  
                  start_initialization 000000        __size_of_PIN_MANAGER_Initialize 000000  
               _PIN_MANAGER_Initialize 000000       ?_INTERRUPT_GlobalInterruptEnable 000000  
    ??_INTERRUPT_GlobalInterruptEnable 000000        _INTERRUPT_GlobalInterruptEnable 000000* 
                          _INTCON2bits 000FF1                               __Hrparam 000000* 
                             __Lrparam 000000*               ??_OSCILLATOR_Initialize 000000  
                        __size_of_main 000000                             _INTCONbits 000FF2  
              ?_PIN_MANAGER_Initialize 000000         __end_of_PIN_MANAGER_Initialize 000028  
